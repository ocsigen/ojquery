<?xml version="1.0"?>
<entry type="selector" name="focus" return="">
  <title>:focus Selector</title>
  <sample>:focus</sample>
  <signature>
    <added>1.6</added>
  </signature>
  <desc>Selects element if it is currently focused.</desc>
  <longdesc>
    <p>As with other pseudo-class selectors (those that begin with a ":"), it is recommended to precede <code>:focus</code> with a tag name or some other selector; otherwise, the universal selector ("*") is implied. In other words, the bare <code>$(':focus')</code> is equivalent to <code>$('*:focus')</code>.  If you are looking for the currently focused element, <code>$( document.activeElement )</code> will retrieve it without having to search the whole DOM tree.</p>
  </longdesc>
  <example>
    <desc>Adds the focused class to whatever element has focus</desc>
    <code><![CDATA[
$( "#content" ).delegate( "*", "focus blur", function( event ) {
    var elem = $( this );
    setTimeout(function() {
       elem.toggleClass( "focused", elem.is( ":focus" ) );
    }, 0);
});
]]></code>
    <css><![CDATA[
.focused {
    background: #abcdef;
}
]]></css>
    <html><![CDATA[
<div id="content">
    <input tabIndex="1">
    <input tabIndex="2">
    <select tabIndex="3">
        <option>select menu</option>
    </select>
    <div tabIndex="4">
        a div
    </div>
</div>
]]></html>
  </example>
  <category slug="selectors/basic-filter-selectors"/>
  <category slug="selectors/form-selectors"/>
  <category slug="version/1.6"/>
</entry>